{"version":3,"file":"RNNFCLoginController.js","sourceRoot":"","sources":["../src/RNNFCLoginController.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AACjE,MAAM,EAAE,oBAAoB,EAAE,cAAc,EAAE,GAAG,aAAa,CAAC;AAO/D,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,cAAc,EAAE,CAAC,CAAC;AAE3C,IAAI,eAAe,GAA8B,IAAI,CAAC;AACtD,IAAI,CAAC,cAAc,EAAE,CAAC;IACpB,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;AAC3C,CAAC;KAAM,CAAC;IACN,eAAe,GAAG,IAAI,kBAAkB,CAAC,cAAc,CAAC,CAAC;AAC3D,CAAC;AACD,MAAM,CAAC,MAAM,YAAY,GAAG,eAAe,CAAC;AAQ5C,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,OAAgC,EACf,EAAE;IACnB,OAAO,oBAAoB,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;AACxD,CAAC,CAAC","sourcesContent":["import { NativeEventEmitter, NativeModules } from \"react-native\";\nconst { RNNFCLoginController, RNEventEmitter } = NativeModules;\n\nexport interface PState {\n  state: \"idle\" | \"loading\" | \"value\" | \"error\";\n  value?: boolean;\n  error?: string;\n}\nconsole.log(\"emitter\", { RNEventEmitter });\n\nlet eventEmitterRaw: NativeEventEmitter | null = null;\nif (!RNEventEmitter) {\n  console.error(\"Native module not found\");\n} else {\n  eventEmitterRaw = new NativeEventEmitter(RNEventEmitter);\n}\nexport const eventEmitter = eventEmitterRaw;\n\nexport interface ReadPersonalDataOptions {\n  can: string;\n  pin?: string;\n  checkBrainpoolAlgorithm?: boolean;\n}\n\nexport const readPersonalDataNative = (\n  options: ReadPersonalDataOptions\n): Promise<string> => {\n  return RNNFCLoginController.readPersonalData(options);\n};\n"]}